import { useState, useEffect } from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { API } from 'aws-amplify';
import { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';
import {listTodos}  from '../src/graphql/queries';
import {createTodo}  from '../src/graphql/mutations';
import { Storage } from 'aws-amplify';

export default function Home() {
  const [todoLists, setTodoLists] = useState({});
  const [s3files, setS3Files] = useState([]);
  const [points, setPoints] = useState([]);
  // const [cx, setCanvas] = useState(null);
  let cx = null;

  const fetchTodo =  async() => {
    const allTodos = await API.graphql({ query: listTodos });
    setTodoLists(allTodos);
  };

  useEffect(async()=> {
    await fetchTodo();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        <AmplifySignOut />
      <main className={styles.main}>

        <div>
          <div>upload file</div>
          <input type="file" id="my-file"/>
          <button onClick={async() => {
             const file = document.getElementById("my-file").files[0];
             console.log(file);
             try {
              await Storage.put(file.name, file);
            } catch (error) {
              console.log("Error uploading file: ", error);
            }
          }}>upload</button>

          <button onClick={async() => {
            const allS3files = await Storage.list('');
            const files = await Promise.all(allS3files.map(async(file) => {
              const signUrl = await Storage.get(file.key);
              return {
                url: signUrl,
                key: file.key
              }
            }));

            console.log(files);
            setS3Files(files);
          }}>List files</button>

          {s3files.map(file => <div key={file.url} ><a href={file.url}>{file.key}</a></div>)}
        </div>
        <div>Todo list</div>
        <button onClick={async() => {
            const todoDetails = {
              name: 'Todo ' + Math.floor((Math.random() * 100)),
              description: 'Learn AWS AppSync'
            };

            const newTodo = await API.graphql({ query: createTodo, variables: {input: todoDetails}});
            if(!newTodo.errors) {
              await fetchTodo();
            }

        }}>Add TODO</button>
        <button onClick={fetchTodo}>TODO List</button>

        {todoLists.data?.listTodos?.items?.map((item) => 
          <div key={item.id}>
            <p>{item.name}</p>
            <p>{item.description}</p>
          </div>
        )}
      </main>

      <canvas width="700" height="500" className={styles.canvas} id="drawer" onClick={(event) => {
        console.log(event);
        if(cx == null) {
          cx =  document.getElementById("drawer").getContext("2d");
          cx.clearRect(0, 0, 700, 500);
          cx.beginPath();
          cx.moveTo(event.pageX, event.pageY);
        } else {
          cx.lineTo(event.pageX, event.pageY);
        }
        console.log(event.pageX, event.pageY);

      }}></canvas>
      <button className={styles.fillBtn} onClick={() => {
        if(cx != null) {
          cx.fillStyle = "rgba(255,165,0,0.6)";
          cx.fill();
          cx = null;
        } else {
          alert("choose point on the canvas.")
        }

      }}>Fill</button>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
